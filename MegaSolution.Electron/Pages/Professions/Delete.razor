@page "/professions/delete/{Id}"
@attribute [Authorize(Roles = "Administrator")]
@inherits DeleteBase

<h3 class="card-title">Êtes-vous sûr de vouloir supprimer cet enregistrement?</h3>
<hr />
<br />
@if (!isSuccess)
{
    <ErrorMessage Message="Un problème est survenu lors de l'opération" />
}

@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Selection invalide. Veuillez réessayer" />
}
else if (Model == null)
{
    <LoadingMessage Message="Chargement des détails de la profession" />
}
else
{
    <div class="col-md-4">
        <table class="table table-responsive">
            <tr>
                <td>ID</td>
                <td>@Model.ProfessionId</td>
            </tr>
            <tr>
                <td>Libellé</td>
                <td>@Model.ProfessionName</td>
            </tr>
           
        </table>
        <br />
        @if (Model.Offers == null || Model.Offers.Count < 1)
        {
            <div class="alert alert-dismissible alert-secondary">
                Aucune offre est proposée par ce studio
            </div>
        }
        else
        {
            <div class="card" style="width: 18rem;">
                <div class="card-header">
                    <h4>Offres</h4>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var offer in Model.Offers)
                    {
                        <li class="list-group-item">@offer.Title - @offer.OfferReference - @offer.PublishDate </li>
                    }
                </ul>
            </div>
        }

    </div>
}
<br />

<button @onclick="DeleteProfession" class="btn btn-danger">
    <span class="oi oi-delete"></span>
    Supprimer profession
</button>

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Revenir sur la liste
</button>
