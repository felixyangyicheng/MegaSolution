@inherits LayoutComponentBase
@inject IJSRuntime js
@inject AppData appData
<div class="page @GetCssClass() ">
    @*<div class="sidebar">
        <NavMenu />
    </div>*@

    <div class="main">
        <div class="top-row px-4">

            Theme
            <select @onchange="ChangingTheme " style="margin-left: 1rem">
                @foreach (var theme in themes)
                {
                    <option selected="@IsSelectedTheme(theme)" value="@theme">@theme</option>
                }
            </select>

           
        </div>

        <div class="content px-4">
            @Body
        </div>
    </div>
</div>


@code{
    public string selectedTheme = "Léger";
    private List<string> themes = new List<string> { "Léger", "Foncé" };
    private readonly string keyTheme = "theme";

    //protected override void OnInitialized()
    //{
    //    if (!string.IsNullOrEmpty(appData.Theme))
    //    {
    //        selectedTheme = appData.Theme;
    //    }
    //}

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var themeFromLocalSotrage = await js.InvokeAsync<string>("readLocalStorage", keyTheme);
            if (!string.IsNullOrEmpty(themeFromLocalSotrage))
            {
                selectedTheme = themeFromLocalSotrage;
                StateHasChanged();
            }
        }
    }

    private string GetCssClass()
    {
        if (selectedTheme == "Léger")
        {
            return String.Empty;
        }
        else
        {
            return "dark-mode";
        }
    }

    private bool IsSelectedTheme(string theme)
    {
        return theme == selectedTheme;
    }
    private async Task ChangingTheme(ChangeEventArgs e)
    {
        selectedTheme = e.Value.ToString();
        await js.InvokeVoidAsync("addToLocalStorage", keyTheme, selectedTheme);
    }
}