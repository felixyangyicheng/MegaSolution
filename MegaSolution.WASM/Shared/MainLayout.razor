@layout RootLayout
@inherits LayoutComponentBase

<Layout Sider="true">
    <LayoutSider>
        <LayoutSiderContent>
            <Bar Breakpoint="Breakpoint.Desktop" NavigationBreakpoint="Breakpoint.Tablet" ThemeContrast="ThemeContrast.Dark"
                 Mode="BarMode.VerticalInline" CollapseMode="BarCollapseMode.Small">
                <BarToggler />
                <BarBrand>
                    <BarItem>
                        <BarLink To="">
                            <BarIcon IconName="customIcon" />
                            MegaCasting
                        </BarLink>
                    </BarItem>
                </BarBrand>
                <BarMenu>
                    <BarStart>
                        <BarLabel></BarLabel>
                        <BarItem>
                            <BarLink To="">
                                <BarIcon IconName="IconName.Dashboard" />
                                Dashboard
                            </BarLink>
                        </BarItem>
                        <BarItem>
                            @*<BarDropdown @bind-Visible="uiElementsVisible">*@
                                <BarDropdown >
                                    <BarDropdownToggle>
                                        <BarIcon IconName="IconName.Book" />
                                            Gestion offre
                                    </BarDropdownToggle>
                                    <BarDropdownMenu>
                                        <BarDropdownItem To="/contracts">
                                            Liste des contrats
                                        </BarDropdownItem>
                                        <BarDropdownItem To="/contracttypes">
                                            Types de contrat
                                        </BarDropdownItem>
                                        <BarDropdownItem To="/offers">
                                            Listes des offres
                                        </BarDropdownItem>
                                    </BarDropdownMenu>
                                </BarDropdown>
                        </BarItem>
                        <BarItem>
                            <BarDropdown>
                                <BarDropdownToggle>
                                    <BarIcon IconName="IconName.Edit" />
                                        Profile
                                </BarDropdownToggle>
                                <BarDropdownMenu>
                                    <BarDropdownItem To="studios">
                                        Studios
                                    </BarDropdownItem>
                                    <BarDropdownItem To="diffusionpartners">
                                        Partenaire de diffusion
                                    </BarDropdownItem>
                                    <BarDropdownItem To="artists">
                                        Artistes
                                    </BarDropdownItem>
                                  
                                </BarDropdownMenu>
                            </BarDropdown>
                        </BarItem>
                        <BarItem>
                            <BarDropdown>
                                <BarDropdownToggle>
                                    <BarIcon IconName="IconName.Indent" />
                                    Professions
                                </BarDropdownToggle>
                                <BarDropdownMenu>
                                    <BarDropdownItem To="professions">
                                        Listes des professsions
                                    </BarDropdownItem>
                                    <BarDropdownItem To="professionsectors">
                                        Secteur de professsion
                                    </BarDropdownItem>
                                   
                                </BarDropdownMenu>
                            </BarDropdown>
                        </BarItem>
                        
                    </BarStart>
                    <BarEnd>
                        <BarItem>
                            <BarDropdown>
                                <BarDropdownToggle>
                                    <BarIcon IconName="IconName.Wrench" />
                                   Gestion d'accès
                                </BarDropdownToggle>
                                <BarDropdownMenu>
                                    <BarDropdownItem To="">
                                        Ajout compte de diffusion
                                    </BarDropdownItem>
                                    <BarDropdownItem To="/adminregistrer">
                                        Ajout compte d'employé
                                    </BarDropdownItem>
                                </BarDropdownMenu>
                            </BarDropdown>
                        </BarItem>
                        <BarItem>
                            <BarDropdown>
                                <BarDropdownToggle>
                                    <BarIcon IconName="IconName.UserCheck" />
                                    Utilisateur
                                </BarDropdownToggle>

                                <BarDropdownMenu>
                                    <BarDropdownItem To="/registrer">
                                        S'inscrire
                                    </BarDropdownItem>
                                    <BarDropdownItem To="/login">
                                        Se Connecter
                                    </BarDropdownItem>
                                    <BarDropdownItem To="/logout">
                                        Se déconnecter
                                    </BarDropdownItem>
                                </BarDropdownMenu>
                            </BarDropdown>
                        </BarItem>
                    </BarEnd>
                </BarMenu>
            </Bar>
        </LayoutSiderContent>
    </LayoutSider>
    <Layout>
        <LayoutHeader Fixed="true">
            <Bar @bind-Visible="@topbarVisible" Breakpoint="Breakpoint.Desktop" Background="Background.Primary" ThemeContrast="ThemeContrast.Light">
                <BarBrand>
                    <BarItem>
                        <BarLink To="">
                            <BarIcon IconName="IconName.Dashboard" />
                            MegaCasting Administration
                        </BarLink>
                    </BarItem>
                </BarBrand>
                <BarToggler />
                <BarMenu>
                    <BarStart>
                        
                    </BarStart>
                    <BarEnd>
                        <BarItem>
                            <BarDropdown>
                                <BarDropdownToggle><Icon Name="IconName.Tint" /> Theme</BarDropdownToggle>
                                <BarDropdownMenu Style="padding: 15px; min-width:550px;" RightAligned="true">
                                    <Row>
                                        <Column Margin="Margin.Is2.FromBottom">
                                            <Field>
                                                <Switch TValue="bool" Checked="@(Theme?.Enabled == true)" CheckedChanged="@OnThemeEnabledChanged">Theme enabled</Switch>
                                            </Field>
                                        </Column>
                                    </Row>
                                    <Row>
                                        <Column Margin="Margin.Is2.FromBottom">
                                            <Field>
                                                <Check TValue="bool" Checked="@(Theme?.IsGradient == true)" CheckedChanged="@OnGradientChanged">Gradient colors</Check>
                                            </Field>
                                            <Field>
                                                <Check TValue="bool" Checked="@(Theme?.IsRounded == true)" CheckedChanged="@OnRoundedChanged">Rounded elements</Check>
                                            </Field>
                                        </Column>
                                    </Row>
                                    <Row>
                                        <Column>
                                            <Container Fluid="true">
                                                <ThemeColorSelector Value="@(Theme?.ColorOptions?.Primary)" ValueChanged="@OnThemeColorChanged"></ThemeColorSelector>
                                            </Container>
                                        </Column>
                                    </Row>
                                </BarDropdownMenu>
                            </BarDropdown>
                        </BarItem>
                        <BarItem>
                            <BarLink To="https://github.com/felixyangyicheng/MegaSolution">GitHub</BarLink>
                        </BarItem>
                    </BarEnd>
                </BarMenu>
            </Bar>
        </LayoutHeader>
        <LayoutContent Padding="Padding.Is4.OnX">
            @Body
        </LayoutContent>
    </Layout>
</Layout>

@code{void OnThemeEnabledChanged(bool value)
            {
                if (Theme == null)
                    return;

                Theme.Enabled = value;

                Theme.ThemeHasChanged();
            }

            void OnGradientChanged(bool value)
            {
                if (Theme == null)
                    return;

                Theme.IsGradient = value;

                //if ( Theme.GradientOptions == null )
                //    Theme.GradientOptions = new GradientOptions();

                //Theme.GradientOptions.BlendPercentage = 80;

                Theme.ThemeHasChanged();
            }

            void OnRoundedChanged(bool value)
            {
                if (Theme == null)
                    return;

                Theme.IsRounded = value;

                Theme.ThemeHasChanged();
            }

            void OnThemeColorChanged(string value)
            {
                if (Theme == null)
                    return;

                if (Theme.ColorOptions == null)
                    Theme.ColorOptions = new ThemeColorOptions();

                if (Theme.BackgroundOptions == null)
                    Theme.BackgroundOptions = new ThemeBackgroundOptions();

                if (Theme.TextColorOptions == null)
                    Theme.TextColorOptions = new ThemeTextColorOptions();

                Theme.ColorOptions.Primary = value;
                Theme.BackgroundOptions.Primary = value;
                Theme.TextColorOptions.Primary = value;

                if (Theme.InputOptions == null)
                    Theme.InputOptions = new ThemeInputOptions();

                //Theme.InputOptions.Color = value;
                Theme.InputOptions.CheckColor = value;
                Theme.InputOptions.SliderColor = value;

                Theme.ThemeHasChanged();
            }

            private bool topbarVisible = false;
            private bool uiElementsVisible = true;

            [CascadingParameter] protected Theme Theme { get; set; }

            RenderFragment customIcon =@<img src="/Multimedia_file.png" style="width:32px; height: 32px" />;
}